[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.2.1"
androidx-core-ktx = "1.16.0"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.4"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
compose-plugin = "1.7.3"
junit = "4.13.2"
kotlin = "2.1.20"
kotlinx-coroutines = "1.10.1"
ktor = "3.1.2"
ktorfit = "2.5.0"
serialization = "1.8.0"
module-graph = "1.3.3"
detekt = "1.23.8"
decompose = "3.3.0"
essenty = "2.5.0"
kermit = "2.0.5"
replica = "1.3.1-alpha1"
koin = "4.0.2"
coil = "3.1.0"
splashscreen = "1.0.1"
hyperion = "0.9.38"
hyperionAddons = "0.3.3"
chucker = "4.0.0"
androidDesugar = "2.1.5"
ksp = "2.1.20-1.0.31"
exposed = "0.59.0"
h2 = "2.3.232"
postgres = "42.7.5"
bcrypt = "0.4"
settings = "1.3.0"
security = "1.1.0-alpha06"
logback = "1.5.18"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }

androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

androidx-security = { module = "androidx.security:security-crypto", version.ref = "security" }
androidx-security-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "security" }

android-desugar = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugar" }

kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }


koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-network-tls-certificates = {  module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }


ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-engine-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-engine-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

ktorfit-lib = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-lib", version.ref = "ktorfit" }
ktorfit-ksp = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-ksp", version.ref = "ktorfit" }

detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }

kermit-logger = { module = "co.touchlab:kermit", version.ref = "kermit" }

replica-core = { module = "com.github.aartikov:replica-core", version.ref = "replica" }
replica-android-network = { module = "com.github.aartikov:replica-android-network", version.ref = "replica" }
replica-algebra = { module = "com.github.aartikov:replica-algebra", version.ref = "replica" }
replica-decompose = { module = "com.github.aartikov:replica-decompose", version.ref = "replica" }
replica-devtools = { module = "com.github.aartikov:replica-devtools", version.ref = "replica" }
replica-devtools-noop = { module = "com.github.aartikov:replica-devtools-noop", version.ref = "replica" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }

splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "splashscreen" }

chucker = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
hyperion-core = { group = "com.willowtreeapps.hyperion", name = "hyperion-core", version.ref = "hyperion" }
hyperion-recorder = { group = "com.willowtreeapps.hyperion", name = "hyperion-recorder", version.ref = "hyperion" }
hyperion-crash = { group = "com.willowtreeapps.hyperion", name = "hyperion-crash", version.ref = "hyperion" }
hyperion-disk = { group = "com.willowtreeapps.hyperion", name = "hyperion-disk", version.ref = "hyperion" }
hyperion-addons-networkEmulation = { group = "me.nemiron.hyperion", name = "network-emulation", version.ref = "hyperionAddons" }
hyperion-addons-chucker = { group = "me.nemiron.hyperion", name = "chucker", version.ref = "hyperionAddons" }

bcrypt = {  group = "org.mindrot", name = "jbcrypt", version.ref = "bcrypt" }

settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }

[bundles]
replica-common = [
    "replica-core",
    "replica-algebra",
    "replica-decompose"
]

ktor-client-common = [
    "ktor-client-core",
    "ktor-client-auth",
    "ktor-serialization-kotlinx-json",
    "ktor-client-content-negotiation",
    "ktor-client-logging"
]

ktor-server = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-content-negotiation",
    "ktor-serialization-kotlinx-json",
    "ktor-server-swagger",
    "ktor-server-status-pages",
    "ktor-server-call-logging",
    "postgresql",
    "h2",
    "koin-ktor",
    "koin-logger-slf4j",
    "exposed-core",
    "exposed-jdbc",
    "ktor-server-auth",
    "ktor-server-auth-jwt",
    "ktor-server-request-validation",
    "ktor-server-cors",
    "ktor-network-tls-certificates",
    "logback"
]

hyperion = [
    "hyperion-core",
    "hyperion-recorder",
    "hyperion-crash",
    "hyperion-disk",
    "hyperion-addons-networkEmulation",
    "hyperion-addons-chucker"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

module-graph = { id = "ru.mobileup.module-graph", version.ref = "module-graph" }

detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }





